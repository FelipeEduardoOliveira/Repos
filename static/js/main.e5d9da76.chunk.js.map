{"version":3,"sources":["styles/style.js","services/api.js","pages/main/style.js","pages/main/index.js","pages/repos/styles.js","pages/repos/index.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["createGlobalStyle","api","axios","create","baseURL","Container","styled","div","Form","form","props","Erro","animate","keyframes","SubmitButton","button","attrs","type","disabled","Load","css","List","ul","DelButton","Main","useState","newRepo","setNewRepo","repositorios","setRepositorios","loading","setLoading","alerta","setAlerta","useEffect","storageRepos","localStorage","getItem","JSON","parse","setItem","stringify","handleSubmit","useCallback","e","a","Error","get","response","find","repos","name","data","full_name","console","log","preventDefault","submit","deleteRepos","filter","r","size","onSubmit","placeholder","value","onChange","target","color","map","onClick","to","encodeURIComponent","Loading","Owner","header","BackButton","Link","ListIssues","ButtonAction","ListFilter","active","Repositorio","match","repositorio","setRepositorio","issues","setIssues","page","setPage","filterIndex","setFilterIndex","state","label","filters","handlePage","action","nomeRepo","decodeURIComponent","params","Promise","all","per_page","repositorioData","issuesData","load","loadIssue","src","owner","avatar_url","alt","login","description","index","key","item","String","id","user","href","html_url","title","labels","Routes","exact","path","component","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e5d9da76.chunk.js","sourcesContent":["import {createGlobalStyle} from 'styled-components';\r\n\r\nexport default createGlobalStyle`\r\n*{\r\n    margin: 0;\r\n    padding: 0;\r\n    outline: 0;\r\n    box-sizing: border-box;\r\n}\r\nhtml, body, #root{\r\n    min-height: 100%;\r\n\r\n}\r\n\r\nbody{\r\n    background: #0D2636;\r\n    font-size: 14px;\r\n    -webkit-font-smoothing: antialiased !important; \r\n}\r\n\r\nbody, input, button{\r\n    color: #222;\r\n    font-size: 14px;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n}\r\nbutton{\r\n    cursor: pointer;\r\n}\r\n\r\n`;","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'https://api.github.com',\r\n});\r\n\r\nexport default api;","import styled, { keyframes, css } from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    max-width: 700px;\r\n    background: #FFF;\r\n    border-radius: 4px;\r\n    box-shadow: 0 0 20px rgba(0,0,0, 0.5);\r\n    padding: 30px;\r\n    margin: 80px auto;\r\n\r\n    h1{\r\n        font-size: 20px;\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: center;\r\n\r\n        svg{\r\n            margin-right: 10px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const Form = styled.form`\r\n        margin-top: 30px;\r\n        display: flex;\r\n        flex-direction:row;\r\n\r\n        input{\r\n            flex: 1;\r\n            border: 1px solid ${props => (props.Erro ? '#FF0000' : '#DDD')};\r\n            padding: 10px 15px;\r\n            border-radius: 4px;\r\n            font-size: 17px;\r\n        }\r\n`;\r\n//Criando animação do botão\r\n\r\nconst animate = keyframes`\r\nfrom{\r\n    transform: rotate(0deg);\r\n}\r\nto{\r\n    transform: rotate(360deg);\r\n}\r\n\r\n`;\r\n\r\n//Finalizando animação\r\n\r\nexport const SubmitButton = styled.button.attrs(props =>({\r\n    type:'submit',\r\n    disabled: props.Load\r\n}))`\r\n    background: #0D2636;\r\n    border: 0;\r\n    border-radius: 4px;\r\n    margin-left: 10px;\r\n    padding: 0 15px;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n\r\n\r\n    &[disabled]{\r\n        cursor: not-allowed;\r\n        opacity: 0.5;\r\n    }\r\n\r\n    ${props => props.Load &&\r\n        css`\r\n            svg{\r\n                animation: ${animate} 2s linear infinite;\r\n            }\r\n        `\r\n    }\r\n`;\r\n\r\nexport const List = styled.ul`\r\nlist-style:none;\r\nmargin-top: 20px;\r\n\r\nli{\r\n    padding: 15px 0;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n\r\n    & + li{\r\n    border-top: 1px solid black;\r\n    \r\n}\r\n\r\n\r\n}\r\n\r\na{\r\n    text-decoration: none;\r\n    color: #0D2636;\r\n}\r\n`;\r\n\r\nexport const DelButton = styled.button.attrs({\r\n    type: 'button',\r\n})`\r\n    background:transparent;\r\n    padding: 8px 10px;\r\n    border: 0;\r\n    outline: 0;\r\n    border-radius: 4px;\r\n`;","import React, {useState, useCallback, useEffect} from 'react';\r\nimport {FaGithub, FaPlus, FaSpinner, FaBars, FaTrash} from 'react-icons/fa';\r\nimport api from '../../services/api';\r\nimport {Container, Form, SubmitButton, List, DelButton} from './style';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function Main(){\r\n\r\nconst [newRepo, setNewRepo] = useState('');\r\nconst [repositorios, setRepositorios] = useState([]);\r\nconst [loading, setLoading] = useState(false);\r\nconst [alerta, setAlerta] = useState(false);\r\n\r\n// Buscando repositorios no localStorage\r\nuseEffect(()=>{\r\n    const storageRepos = localStorage.getItem('repos');\r\n\r\n    if(storageRepos){\r\n        setRepositorios(JSON.parse(storageRepos));\r\n    }\r\n},[])\r\n\r\n// Salvando repositorios no localStorage\r\n\r\nuseEffect(()=>{\r\n    localStorage.setItem('repos',JSON.stringify(repositorios));\r\n},[repositorios]);\r\n\r\n\r\nconst handleSubmit = useCallback((e)=>{\r\n    e.preventDefault();\r\n   \r\n    async function submit(){\r\n        setLoading(true);\r\n    try {\r\n        if(newRepo === ''){\r\n            throw new Error('Digite um repositório');\r\n            \r\n        }\r\n    const response = await api.get(`repos/${newRepo}`);\r\n\r\n        const hasRepo = repositorios.find(repos => repos.name === newRepo);\r\n\r\n        if(hasRepo){\r\n            throw new Error('O Repositorio digitado ja existe');\r\n            \r\n        }\r\n\r\n    const data = {\r\n        name: response.data.full_name,\r\n    }\r\n    \r\n     setRepositorios([...repositorios, data]);\r\n     \r\n \r\n     setNewRepo('');\r\n    \r\n    } catch (error) {\r\n        setAlerta(true);\r\n        console.log(error);\r\n    }finally{\r\n        setLoading(false);\r\n    }\r\n}\r\n    \r\n\r\n   submit();\r\n    \r\n\r\n\r\n}, [newRepo, setRepositorios]);\r\n\r\nfunction handleInput(e){\r\n    setNewRepo(e.target.value);\r\n    setAlerta(false);\r\n    \r\n}\r\n\r\n\r\nconst deleteRepos = useCallback((repos)=>{\r\n        const find = repositorios.filter(r => r.name !== repos);\r\n\r\n        setRepositorios(find);\r\n}, [repositorios]);\r\n\r\nreturn(\r\n        <Container>\r\n            <h1>\r\n                <FaGithub size={25}/>\r\n                Meus repositorios\r\n            </h1>\r\n\r\n            <Form onSubmit={handleSubmit} Erro={alerta}>\r\n                <input type='text'\r\n                 placeholder='Adicionar repositorio'\r\n                 value={newRepo} \r\n                 onChange={handleInput}/>\r\n\r\n                <SubmitButton Load={loading ? 1 : 0}>\r\n\r\n                        {loading ? (\r\n                            <FaSpinner color='#FFF' size={14}/>\r\n                        ) : (\r\n                            <FaPlus color='#FFF' size={14}/>\r\n                        )}\r\n\r\n                    \r\n                </SubmitButton>\r\n            </Form>\r\n\r\n            <List>\r\n                {repositorios.map(repos=>(\r\n                    <li>\r\n                        <span>\r\n                            <DelButton onClick={()=>deleteRepos(repos.name)}>\r\n                                <FaTrash size={14}/>\r\n                            </DelButton>\r\n                            {repos.name}\r\n                        </span>\r\n                        \r\n                        <Link to={`/repositorio/${encodeURIComponent(repos.name)}`}>\r\n                            <FaBars size={20}/>\r\n                        </Link>\r\n\r\n                    </li>\r\n                ))}\r\n            </List>\r\n        </Container>\r\n    );\r\n}","import styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nexport const Container = styled.div`\r\n\r\n    max-width: 700px;\r\n    background: #FFF;\r\n    border-radius: 4px;\r\n    box-shadow: 0 0 20px rgba(186,23,23, 0.2);\r\n    padding: 30px;\r\n    margin: 80px auto;\r\n`;\r\n\r\nexport const Loading = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content:center;\r\n    justify-items: center;\r\n    justify-self: center;\r\n    height: 100vh;\r\n\r\n    h1{\r\n        color: #FFF;\r\n        font-size:30px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nexport const Owner = styled.header`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    img{\r\n        width:150px;\r\n        border-radius: 20%;\r\n        margin: 20px 0 ;\r\n    }\r\n\r\n    h1{\r\n        font-size: 30px;\r\n        color: #0D2636;\r\n    }\r\n\r\n    p{\r\n        margin-top: 5px;\r\n        font-size: 14px;\r\n        color: #000;\r\n        text-align: center;\r\n        line-height:1.4;\r\n        max-width: 400px;\r\n    }\r\n`;\r\n\r\n\r\nexport const BackButton = styled(Link)`\r\n        border: none;\r\n        outline: 0;\r\n        background-color: transparent;\r\n`;\r\n\r\nexport const ListIssues = styled.ul`\r\n    margin-top: 30px;\r\n    padding-top: 30px;\r\n    border-top: 1px solid #eee;\r\n    list-style: none;\r\n\r\n    li{\r\n        display: flex;\r\n        padding: 15px 10px;\r\n\r\n        & + li{\r\n        border-top: 1px solid #EEEE;\r\n    }\r\n    }\r\n\r\n    \r\n\r\n    img{\r\n        width: 36px;\r\n        height: 36px;\r\n        border-radius: 50%;\r\n        border: 2px solid #0D2636;\r\n    }\r\n\r\n    div{\r\n        flex:1;\r\n        margin-left: 12px;\r\n\r\n        p{\r\n            margin-top: 10px;\r\n            font-size: 12px;\r\n            color: #000;\r\n        }\r\n\r\n    }\r\n\r\n    strong{\r\n        font-size: 15px;\r\n\r\n        a{\r\n            text-decoration: none;\r\n            color: #222;\r\n            transition: 0.3s;\r\n\r\n            &:hover{\r\n                color: #0071db;\r\n            }\r\n        }\r\n\r\n        span{\r\n            background: #222;\r\n            color: #FFF;\r\n            border-radius: 4px;\r\n            font-size: 12px;\r\n            font-weight: 600;\r\n            padding: 5px 7px;\r\n            margin-left: 7px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ButtonAction = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n\r\n    button{\r\n        outline: 0;\r\n        border: 1px solid #0D2636;\r\n        background: #eeee;\r\n        color: #000;\r\n        padding: 8px;\r\n        border-radius: 4px;\r\n\r\n        &:disabled{\r\n            cursor: not-allowed;\r\n            opacity: 0.5;\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport const ListFilter = styled.div`\r\n\r\nbutton{\r\n    border: 0;\r\n    padding: 5px;\r\n    margin:5px 5px;\r\n    border-radius: 4px;\r\n\r\n    &:nth-child(${props => props.active + 1}){\r\n        background-color: #0071db;\r\n        color: #fff;\r\n    }\r\n}\r\n\r\n`;","import React, {useState, useEffect} from 'react';\r\nimport {FaArrowLeft} from 'react-icons/fa';\r\nimport {Container, Owner,Loading, BackButton, ListIssues, ButtonAction, ListFilter} from './styles';\r\nimport api from '../../services/api';\r\n\r\n//\r\n\r\nexport default function Repositorio({match}){\r\n\r\n    const [repositorio, setRepositorio] = useState({});\r\n    const [issues, setIssues] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [page, setPage] = useState(1);\r\n    const [filterIndex, setFilterIndex] = useState(0);\r\n    const [filters, setFilters] = useState([\r\n        {state: 'all', label:'Todas', /*active: true*/},\r\n        {state: 'open', label:'Abertos', /*active: false*/},\r\n        {state: 'closed', label:'Fechados', /*active: false*/}\r\n    ]);\r\n\r\n    \r\n    \r\n    useEffect(()=>{\r\n\r\n        async function load(){\r\n            const nomeRepo = decodeURIComponent(match.params.repositorio);\r\n\r\n            const [repositorioData, issuesData ] = await Promise.all([\r\n                api.get(`/repos/${nomeRepo}`),\r\n                api.get(`/repos/${nomeRepo}/issues`,{\r\n                    params:{\r\n                        state: 'all',//filters.find(f => f.active).state,\r\n                        per_page: 5\r\n                    }\r\n                })\r\n            ])\r\n            \r\n            setRepositorio(repositorioData.data);\r\n            \r\n            setIssues(issuesData.data);\r\n            // console.log(issuesData.data);\r\n            setLoading(false);\r\n        }\r\n\r\n        load();\r\n    },[match.params.repositorio]);\r\n    \r\n    useEffect(()=>{\r\n\r\n        async function loadIssue(){\r\n            \r\n        const nomeRepo = decodeURIComponent(match.params.repositorio);\r\n\r\n        const response = await api.get(`/repos/${nomeRepo}/issues`,{\r\n            params:{\r\n                state: filters[filterIndex].state,\r\n                page,\r\n                per_page: 5\r\n            }\r\n        })\r\n\r\n        setIssues(response.data);\r\n        }\r\n\r\n        loadIssue();\r\n\r\n\r\n    }, [filters, filterIndex,page]);\r\n\r\n    function handlePage(action){\r\n\r\n        setPage(action === 'back' ? page -1 : page +1);\r\n        \r\n    }\r\n    \r\n    function handleFilter(pos){\r\n        setFilterIndex(pos);\r\n    }\r\n\r\n\r\n    if(loading){\r\n        return(\r\n            <Loading>\r\n                <h1>Carregando</h1>\r\n            </Loading>\r\n        );        \r\n    }\r\n\r\n    \r\n    return(\r\n           \r\n        <Container>\r\n\r\n        \r\n\r\n\r\n            <BackButton to='/'>\r\n                <FaArrowLeft color=\"#000\" size={25}/>\r\n            </BackButton>\r\n            <Owner>\r\n                <img \r\n                src={repositorio.owner.avatar_url}\r\n                alt={repositorio.owner.login}\r\n                />\r\n                \r\n\r\n                <h1>{repositorio.name}</h1>\r\n                <p>{repositorio.description}</p>\r\n\r\n            </Owner>\r\n\r\n\r\n            <ListFilter active={filterIndex}>\r\n            {filters.map((filter, index) => (\r\n                <button\r\n                type='button'\r\n                key={filter.label}\r\n                onClick={()=>handleFilter(index)}\r\n                >\r\n                    {filter.label}\r\n\r\n                </button>\r\n            ))}\r\n        </ListFilter>\r\n\r\n            <ListIssues>\r\n                {issues.map(item=>{\r\n                    return(\r\n                        <li key={String(item.id)}>\r\n\r\n                            <img src={item.user.avatar_url} \r\n                            alt={item.user.login}\r\n                            />\r\n\r\n                            <div>\r\n                                <strong>\r\n                                    <a href={item.html_url}>{item.title}</a>\r\n\r\n                                    {item.labels.map(label => {\r\n                                        return(\r\n                                            <span key={label.id}> {label.name} </span>\r\n                                        );\r\n                                    })}\r\n                                </strong>\r\n\r\n                                    <p> {item.user.login} </p>\r\n\r\n                            </div>\r\n\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ListIssues>\r\n\r\n            <ButtonAction>\r\n                <button type='button'\r\n                onClick={()=> handlePage('back')}\r\n                disabled={page < 2}\r\n                > Voltar </button>\r\n\r\n\r\n                <button type='button' \r\n                onClick={()=> handlePage('next')}\r\n                // disabled={}\r\n                > Proximo </button>\r\n\r\n            </ButtonAction>\r\n        </Container>\r\n    );\r\n}","import React from 'react'\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';      \r\n\r\nimport Main from './pages/main';\r\nimport Repositorio from './pages/repos';\r\n\r\nfunction Routes (){\r\n    return(\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path='/' component={Main} />\r\n                <Route  path='/repositorio/:repositorio' component={Repositorio} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default Routes;","import React from 'react';\nimport GlobalStyle from './styles/style';\nimport Routes from './routes';\n\n\nfunction App() {\n  return (\n    <>\n        <GlobalStyle/>\n        <Routes/>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}